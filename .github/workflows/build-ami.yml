name: Build AMI with Packer

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ap-south-1
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Packer
        uses: hashicorp/setup-packer@v2
        with:
          version: latest

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Build AMI
        run: |
          echo "Building AMI from base AMI: ${{ vars.SOURCE_AMI_ID }}"
          PACKER_OUTPUT=$(packer build \
            -var "source_ami=${{ vars.SOURCE_AMI_ID }}" \
            -var "region=$AWS_REGION" \
            -machine-readable packer/template.pkr.hcl)
          echo "$PACKER_OUTPUT"
          AMI_ID=$(echo "$PACKER_OUTPUT" | grep -oP 'ami-\w{8,}' | tail -1)
          if [ -z "$AMI_ID" ]; then
            echo "❌ Failed to extract new AMI ID"
            exit 1
          fi
          echo "✅ Built new AMI: $AMI_ID"
          echo "AMI_ID=$AMI_ID" >> $GITHUB_ENV

      - name: Launch EC2 instance
        run: |
          INSTANCE_ID=$(aws ec2 run-instances \
            --image-id $AMI_ID \
            --instance-type t2.micro \
            --region $AWS_REGION \
            --query "Instances[0].InstanceId" \
            --output text)
          echo "INSTANCE_ID=$INSTANCE_ID" >> $GITHUB_ENV
          echo "Launched instance: $INSTANCE_ID"

      - name: Validate Nginx
        run: bash scripts/validate_and_cleanup.sh $INSTANCE_ID $AWS_REGION
